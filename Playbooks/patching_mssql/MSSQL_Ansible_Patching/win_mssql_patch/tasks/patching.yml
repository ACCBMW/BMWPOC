#- hosts: all
#  gather_facts: True
#  vars:
#   sql_instance_name: benz
#  tasks:
- debug: var=hostvars[inventory_hostname]
- name: create a directory for installer download
  win_file:
    path: c:\sql
    state: directory

- name: create a directory for patch installer extraction
  win_file:
    path: c:\sql\hotfix
    state: directory

- name: create the configuration file
  win_template:
    src: files/sql_conf.ini.j2_working
    dest: c:\sql\sql_conf.ini

- name: a pre requisite of sql net-framework-35
  win_feature:
    name: NET-Framework-Core
    state: present

- name: check downloaded file exists
  win_stat:
    path: c:\sql\hotfix\sql_patch.exe
  register: hotfix_file

- name: DBservice 
  win_command: "powershell.exe (Get-Service |  where{ $_.name -like 'MSSQL*'} | select-object Name).Name.split('$') | select-string -NotMatch 'MSSQL' | select-string -NotMatch 'MICROSOFT##WID'"
  register: check_service

- name: setfact
  set_fact:
    listservice: "{{ check_service.stdout_lines | map('trim') |  select('match', '^([a-zA-Z])+')|  list  }}"

#- name: get the installer
#  win_get_url:
#    url: 'http://download.microsoft.com/download/E/A/E/EAE6F7FC-767A-4038-A954-49B8B05D04EB/ExpressAndTools%2064BIT/SQLEXPRWT_x64_ENU.exe'
#    dest: 'c:\sql\hotfix\sql_patch.exe'
#  when: not hotfix_file.stat.exists

- name: Install the patch
  win_command: c:\SQLServer2014SP2-KB3171021-x64-ENU.exe /quiet /IAcceptSQLServerLicenseTerms /Action=Patch /InstanceName={{ item }}
  args:
    chdir: c:\sql
  with_items: "{{ listservice }}"

- name: Restart a service
  win_service:
    name: "MSSQL${{ item }}"
    force_dependent_services: yes
    state: started
  with_items: "{{ listservice }}"
  ignore_errors: yes

