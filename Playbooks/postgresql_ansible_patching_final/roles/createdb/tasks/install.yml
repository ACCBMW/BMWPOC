---
- name: Ensure bash, OpenSSl, and libssl are the latest versions
  apt: name={{ item }} update_cache={{ update_apt_cache }} state=latest
  with_items:
    - bash
    - openssl
  tags: packages
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Ensure bash, OpenSSl, and libssl are the latest versions
  yum: name={{ item }} update_cache={{ update_apt_cache }} state=latest
  with_items:
    - bash
    - openssl
  tags: packages
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install PostgreSQL
  zypper: name={{ item }} update_cache={{ update_apt_cache }} state=installed
  with_items:
    - "{{ version }}"
  tags: packages
  when: ansible_distribution == 'SLES'

- name: contrib
  set_fact:
    contribpack: "{{ version | regex_replace('server','contrib')}}"

- name: Install PostgreSQL
  zypper: name={{ item }} update_cache={{ update_apt_cache }} state=installed
  with_items:
    - "{{ contribpack }}"
  tags: packages
  when: ansible_distribution == 'SLES'

- name: Install PostgreSQL
  apt: name={{ item }} update_cache={{ update_apt_cache }} state=installed
  with_items:
    - postgresql{{version}}
    - postgresql{{version}}-contrib
    - postgresql{{version}}-server
  tags: packages
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install PostgreSQL
  apt: name={{ item }} update_cache={{ update_apt_cache }} state=installed
  with_items:
    - postgresql{{version}}
    - postgresql{{version}}-contrib
    - postgresql{{version}}-server
  tags: packages
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=started enabled=yes
