#####################pre-checks########################################
- name: check db service status
  service: name=postgresql
  register: ser_status

- debug: 
    msg: "{{ ser_status.status.SubState }}"

- mail:
    host: smtp.gmail.com
    port: 587
    username: janpreet27july5@gmail.com
    password: Globe@123
    to: "{{ mailid }}"
    subject: Service not stopped
    body: System {{ ansible_hostname }}, Found DB Services running, shutting it down before patching!!
  delegate_to: localhost
  when: ser_status.status.SubState == "running" 

#- meta: end_play
#  when: ser_status.status.SubState == "running"
- name: disk utilization
  shell: "df -h | grep -w / | awk '{print $5}' | tr -d %"
  register: disk_utilization

- mail:
    host: smtp.gmail.com
    port: 587
    username: janpreet27july5@gmail.com
    password: Globe@123
    to: simranjeet.g.singh@accenture.com
    subject: Service not Stopped
    body: System {{ ansible_hostname }}, low disk space available > 80% usage.
  delegate_to: localhost
  when: disk_utilization.stdout > "80"

- meta: end_play
  when: disk_utilization.stdout > "80"



######################################################################
- name: checking the current running instance
  shell: ps -ef|grep postgres | grep -v grep | wc -l
  register: instance

- name: shutting down psql db server
  service: name=postgresql state=stopped
  when: instance.stdout|int >= 1
  register: service_output
  ignore_errors: true

- debug:
    msg: "{{ service_output }}"

- mail:
    host: smtp.gmail.com
    port: 587
    username: janpreet27july5@gmail.com
    password: Globe@123
    to: simranjeet.g.singh@accenture.com
    subject: Service not Stopped
    body: System {{ ansible_hostname }}, Unable to STOP the DB service, please stop it manually and check for DB issue if any!
  delegate_to: localhost
  when: service_output.changed == false and service_output.skipped == false

#- name: postgresql backup
#  shell: pg_dumpall -p5432
#  become_user: postgres

##############################################
- name: Include task list in play only if the condition is true
  include: install.yml
- name: checking the current running instance
  shell: ps -ef|grep postgres | grep -v grep | wc -l
  register: instance_post
- name: starting up psql db server
  service: name=postgresql state=started enable=yes
  when: instance_post.stdout|int == 0



################################ Health Check report ###################

- name: Running Health Check report
  copy: src=/home/ansible/postgresql_ansible_patching_final/PostgreSQL_Healthreport_script.sh  dest=/tmp mode=0777

- name: Execute the script
  command: sh /tmp/PostgreSQL_Healthreport_script.sh

- fetch:
    src: "/root/health_reports/PostgreSQL-Patching-Report.html"
    dest: "/tmp/{{ ansible_hostname }}_PostgreSQL-Patching-Report.html"
    flat: yes

- mail:
    host: smtp.gmail.com
    port: 587
    username: janpreet27july5@gmail.com
    password: Globe@123
    to: simranjeet.g.singh@accenture.com
    subject: Ansible-report
    attach:
      - /tmp/{{ ansible_hostname }}_PostgreSQL-Patching-Report.html
    body: System {{ ansible_hostname }}, Post-Check Report After Installation.
  delegate_to: localhost
